[gd_resource type="VisualShader" load_steps=25 format=2]

[ext_resource path="res://assets/randomNoiseTexture.jpg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 0.08

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 0 ) ]
operator = 4

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.95, 0.95, 0.95 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=9]
function = 6

[sub_resource type="VisualShaderNodeVectorOp" id=10]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 2 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=12]
constant = 0.15

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorFunc" id=20]
function = 13

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=22]
constant = 32.0

[sub_resource type="VisualShaderNodeVectorOp" id=23]
output_port_for_preview = 0
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=24]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=14]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=18]

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Input:22
	float n_out22p0 = TIME;

// Scalar:21
	float n_out21p0 = 0.150000;

// ScalarOp:20
	float n_out20p0 = n_out22p0 * n_out21p0;

// Input:14
	vec3 n_out14p0 = vec3(UV, 0.0);

// Scalar:25
	float n_out25p0 = 32.000000;

// ScalarOp:29
	float n_in29p1 = 2.00000;
	float n_out29p0 = n_out25p0 * n_in29p1;

// VectorCompose:28
	float n_in28p2 = 0.00000;
	vec3 n_out28p0 = vec3(n_out25p0, n_out29p0, n_in28p2);

// VectorOp:24
	vec3 n_out24p0 = n_out14p0 * n_out28p0;

// VectorFunc:23
	vec3 n_out23p0 = ceil(n_out24p0);

// VectorOp:26
	vec3 n_out26p0 = n_out23p0 / n_out28p0;

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out20p0) + n_out26p0;

// VectorOp:13
	vec3 n_in13p1 = vec3(2.00000, 2.00000, 0.00000);
	vec3 n_out13p0 = mod(n_out12p0, n_in13p1);

// VectorOp:19
	vec3 n_in19p1 = vec3(1.00000, 1.00000, 2.00000);
	vec3 n_out19p0 = n_out13p0 - n_in19p1;

// VectorFunc:18
	vec3 n_out18p0 = abs(n_out19p0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out18p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Scalar:10
	float n_out10p0 = 0.080000;

// ScalarOp:8
	float n_out8p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) * n_out10p0;

// VectorCompose:9
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_out8p0, n_out8p0, n_in9p2);

// ScalarOp:17
	float n_in17p0 = 1.00000;
	float n_out17p0 = n_in17p0 - n_out10p0;

// VectorCompose:16
	float n_in16p2 = 0.00000;
	vec3 n_out16p0 = vec3(n_out17p0, n_out17p0, n_in16p2);

// VectorOp:15
	vec3 n_out15p0 = n_out26p0 * n_out16p0;

// VectorOp:7
	vec3 n_out7p0 = n_out9p0 + n_out15p0;

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out7p0.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -722.42, -85.5394 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1200, 80 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( 80, -240 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( 980, 60 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( 800, 60 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( 420, -20 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( 600, 0 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1800, 500 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -660, -60 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -480, -80 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1420, 140 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 620, 140 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 420, 220 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 260, 220 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -120, -100 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -300, -100 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -840, -60 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -1800, -20 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( -1020, -60 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( -1040, 140 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( -1220, 120 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( -1800, 140 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( -840, 140 )
nodes/fragment/28/node = SubResource( 24 )
nodes/fragment/28/position = Vector2( -1420, 200 )
nodes/fragment/29/node = SubResource( 25 )
nodes/fragment/29/position = Vector2( -1600, 240 )
nodes/fragment/connections = PoolIntArray( 8, 0, 9, 0, 8, 0, 9, 1, 9, 0, 7, 0, 3, 0, 8, 0, 10, 0, 8, 1, 7, 0, 4, 0, 15, 0, 7, 1, 10, 0, 17, 1, 17, 0, 16, 0, 16, 0, 15, 1, 17, 0, 16, 1, 18, 0, 3, 0, 12, 0, 13, 0, 19, 0, 18, 0, 13, 0, 19, 0, 20, 0, 12, 0, 21, 0, 20, 1, 22, 0, 20, 0, 14, 0, 24, 0, 24, 0, 23, 0, 23, 0, 26, 0, 26, 0, 12, 1, 26, 0, 15, 0, 28, 0, 24, 1, 25, 0, 29, 0, 28, 0, 26, 1, 4, 1, 0, 1, 4, 0, 0, 0, 29, 0, 28, 1, 25, 0, 28, 0 )
